<!DOCTYPE html>
<html>
<head>
  <title>Driver - Ambulance Tracker</title>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
  <link rel="stylesheet" href="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.css" />
  <style>
    #map { height: 100vh; }
    #accept-request {
      position: absolute; bottom: 20px; left: 50%; transform: translateX(-50%);
      padding: 12px 24px; font-size: 16px;
      background-color: #4CAF50; color: white;
      border: none; border-radius: 5px; cursor: pointer; z-index: 1000; display: none;
    }
  </style>
</head>
<body>
  <div id="map"></div>
  <button id="accept-request">Accept Request</button>

  <script src="/socket.io/socket.io.js"></script>
  <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
  <script src="https://unpkg.com/leaflet-routing-machine/dist/leaflet-routing-machine.js"></script>

  <script>
    const socket = io();
    const driverId = "<%= driver._id %>"; // Injected from server

    socket.emit("driver-register", driverId);

    let driverLatitude = 0;
    let driverLongitude = 0;
    let driverMarker = null;
    let routeControl = null;
    let pendingRequest = null;

    const map = L.map("map").setView([0, 0], 13);
    L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
      attribution: "ctrl-alt-elite contributors"
    }).addTo(map);

    navigator.geolocation.watchPosition((position) => {
      driverLatitude = position.coords.latitude;
      driverLongitude = position.coords.longitude;

      socket.emit("driver-location", {
        latitude: driverLatitude,
        longitude: driverLongitude,
      });

      if (!driverMarker) {
        driverMarker = L.marker([driverLatitude, driverLongitude], {
          icon: L.icon({ iconUrl: "/image/ambulance.png", iconSize: [40, 40] }),
        }).addTo(map);
        map.setView([driverLatitude, driverLongitude], 13);
      } else {
        driverMarker.setLatLng([driverLatitude, driverLongitude]);
      }
    });

    // ðŸš¨ Receive ambulance request
    socket.on("ambulance-request-received", (data) => {
      console.log("Received ambulance request from user:", data);
      pendingRequest = data;
      document.getElementById("accept-request").style.display = "block";
    });

    // âœ… Accept request (without prompt)
    document.getElementById("accept-request").addEventListener("click", () => {
      if (pendingRequest) {
        socket.emit("ambulance-accept", {
          driverLocation: {
            latitude: driverLatitude,
            longitude: driverLongitude,
          },
          userLocation: pendingRequest.userLocation,
          userSocketId: pendingRequest.userSocketId
        });

        if (routeControl) map.removeControl(routeControl);

        routeControl = L.Routing.control({
          waypoints: [
            L.latLng(driverLatitude, driverLongitude),
            L.latLng(pendingRequest.userLocation.latitude, pendingRequest.userLocation.longitude),
          ],
          routeWhileDragging: false,
          addWaypoints: false,
          draggableWaypoints: false,
          fitSelectedRoutes: true,
          show: false,
        }).addTo(map);

        document.getElementById("accept-request").style.display = "none";
      }
    });

    // âœ… Receive user info after acceptance
    socket.on("user-info", (userInfo) => {
      alert(`User Name: ${userInfo.userName}\nPhone: ${userInfo.userPhone}`);
    });
  </script>
</body>
</html>
